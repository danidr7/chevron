dist: xenial

language: go

go:
- 1.10.x

# Only clone the most recent commit.
git:
  depth: 1

before_install:
 - go get github.com/mattn/goveralls
 - echo "deb http://download.rethinkdb.com/apt xenial main" | sudo tee /etc/apt/sources.list.d/rethinkdb.list
 - wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add -
 - sudo apt-get -qq update && sudo apt-get install -y rethinkdb
 - wget https://releases.hashicorp.com/vault/1.0.2/vault_1.0.2_linux_amd64.zip
 - unzip vault_1.0.2_linux_amd64.zip
 - sudo cp vault /usr/bin

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
- rethinkdb & echo $! > $HOME/rethinkdb.pid
- echo "RethinkDB PID `cat $HOME/rethinkdb.pid`"
- echo "Starting Vault"
- export VAULT_ADDR='http://127.0.0.1:8200'
- export VAULT_DEV_ROOT_TOKEN_ID="123456"
- export VAULT_ROOT_TOKEN=$VAULT_DEV_ROOT_TOKEN_ID
- export VAULT_ADDRESS="$VAULT_ADDR"
- export VAULT_USE_USERPASS="true"
- export VAULT_USERNAME="remotesigner"
- export VAULT_PASSWORD="123456"
- export DATABASE_NAME="qrs_test"
- vault server -dev & echo $! > $HOME/vault.pid
- echo "Waiting vault settle" & sleep 2
- echo "Vault started with PID `cat $HOME/vault.pid`"
- vault auth enable userpass
- vault policy write test-policy ./test-policy.hcl
- vault write auth/userpass/users/${VAULT_USERNAME} password=${VAULT_PASSWORD} policies=test-policy
- export
- curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v1.10.2
- golangci-lint run
- go test -v -race ./... -coverprofile=qrs.coverprofile
- goveralls -coverprofile=qrs.coverprofile -service travis-ci
- echo "Closing RethinkDB"
- sudo kill -9 `cat ~/rethinkdb.pid`
- echo "Closing Vault"
- sudo kill -9 `cat ~/vault.pid`
- echo "Done"