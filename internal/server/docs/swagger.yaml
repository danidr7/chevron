basePath: /remoteSigner
definitions:
  QuantoError.ErrorObject:
    properties:
      errorCode:
        example: INVALID_FIELD_DATA
        type: string
      errorData:
        type: object
      errorField:
        example: fieldName
        type: string
      message:
        example: error example
        type: string
      stackTrace:
        type: string
    type: object
  models.GPGDecryptData:
    properties:
      asciiArmoredData:
        example: wcDMA8HPMfuMKotZAQwADzmQgwJiz3p5suaYpPwCbOluqvu2O5kVitJNO86KfkSYgbR0y67c+fGk5nO+Zm66qeolXLqVBHUvSnpZf9jMupRZLRmSZ0JmmvXoJIdiahj+NLwF6NVBvmoJ8BkMEQkr5oCNkKBveaCYXdQ7Gba2buICwxxwEmq3LV6/D0Zg4AmKX/k2N1kjRGJaUeHH3oU1YEjPo3A3bo9EZLGLI+J5VSlxkydxXUkF2TISKCr2rkhUmH5E7CUFu6H2nOofxk9tJDoSfjACkEjFKdg3BbTqNlYeuNmdJHwLfHDI+WcbL3/Hsl5MVnyHGeztsj0jn2bAIcT9FHfw1W3LUpaTNlemfrn52la7zN3r2588JDRbSaqLQ/d5+3hHWyE7RsRL0jdpEj/HM3ue2mi6GfyxDZy1DxdZsy7kqoYbBIwbtCdqZetU+bH6hWk92BY89AJUpV7xPCzRozw5WvCTsPYsu10JDvvPvj1c47BA9KlJ1wTcB2lYhmoX39T3ymjMKJ+6NAOF0uAB5PToGBs3BjE4MsxQHMLchK3hTuXg+uAY4fVU4I3jFyDPs8zYKsfgCOIHYBV84Obhm9rgqOAh4Ifi+klQeOCf4+p0IGeF6b6+4IPiAtTxRuB+5KnAAWAlBpwJWAqwNJ68HIjiN9UOgeGU+wA=
        type: string
      dataOnly:
        example: true
        type: boolean
    type: object
  models.GPGDecryptedData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      filename:
        example: hello world.txt
        type: string
      fingerPrint:
        example: C1CF31FB8C2A8B59
        type: string
      isIntegrityOK:
        example: false
        type: boolean
      isIntegrityProtected:
        example: false
        type: boolean
    type: object
  models.GPGEncryptData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      dataOnly:
        example: true
        type: boolean
      filename:
        example: hello world.txt
        type: string
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
    type: object
  models.GPGGenerateKeyData:
    properties:
      bits:
        example: 4096
        type: integer
      identifier:
        example: John HUEBR <john@huebr.com>
        type: string
      password:
        example: I think you will never guess
        type: string
    type: object
  models.GPGSignData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
    type: object
  models.GPGUnlockKeyData:
    properties:
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
      password:
        example: "123456"
        type: string
    type: object
  models.GPGVerifySignatureData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      signature:
        example: 0551F452ABE463A4_SHA512_wsDcBAABCgAQBQJf+LYnCRAFUfRSq+RjpAAA7/oMACHJPMtQs4rr0uxX4AMZ8akb+x2p5ZYL+uRug+zctp82sJEJmL76HG++UyzDmMUCagJ+LBWp2RcCQvfsIhX5MqD7lPkEdtl0uNCIU40apvzn1+0kndl7LnFtzyHMWrHrRqEFGJ0E2APPqv7g1pehVKeusMOkTNUmmsJNgZBYrluZxHnai/Rudoe9jBxihY4ALF0eOyTCHbtWy0z6fll3Bo/iPe777kplDXmTBzCEM8uD3/VZmY6pGn6oXUov/z8Dcrg2x5qT4i5DgdF8OSLbsxVW2OIV8DwCicQCT2tK95fctBqJ22vfmhNlxI3KzI9ShxeV6Eci5p5Zydgoh77pDiWDysrq1dOZ+o7T+ij72K3s63w3loERFVoDxDuKG3jS3+fj+ggqqtpUpm957+9+4QlnJqZk0v9TKT661HnoH4MfZR3muBir8/dgF4mNtuQLSswOxdVs1sHSC3ssTIzzpQqeI2iy3m8Svgl5unAdv2QE81EM/wT5brc2R/abSRz52A===J34T
        type: string
    type: object
  models.GPGVerifySignatureDataNonQuanto:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      signature:
        example: |-
          -----BEGIN PGP SIGNATURE-----

          wsDcBAABCgAQBQJf+LriCRAFUfRSq+RjpAAAuL0MAGGrSJfK/tnMkwZ2Rkh3JcvF
          E8WU8jwc8quz+0p9gMDscby0jShJ2G2XXMm3WAYXW88J6h8u2E/lTb6l3oBq/FPb
          15gTM5Ie0p0kHBUlgP5bkV9EF9+VQif40fhVX7OPrS27jWtVNP374ARzSIgKMLa6
          KBZhV1eQecLIlEYXahUP9jyt4cR4A4d9P+YJS/L6d/tQT4g9DBo66hYt5lu4sagG
          DHsW2HK9I7fizCBaE8azLtQd3RRFTWZshln7OGVypwcdbzWbYr5uEhituxAnZKS4
          SWwI0hgj1OkZeOhKwaydtITnaeH+nmlLBzhGKQWjCiLlsDNkkp3/4FKOuYJkYXeZ
          m61GV6G5ZpW/gFVJXXyPz6ElNfWCorZQvxLbY4YWTBLdLyblHnp9kshav6dnexN1
          wQyBDk8jxucmKNE8kCu591dPj/g/H38/zpGZQhj8Firb0rCFumqsAwxFeyTEFjVI
          cyDHa5K+ytmSrITIdQUUsp1M4UQiRH63c1HYOLQurw==
          =BRZt
          -----END PGP SIGNATURE-----
        type: string
    type: object
info:
  contact: {}
  description: This is a chevron remote-signer server
  license:
    name: MIT
    url: https://tldrlegal.com/license/mit-license
  title: Swagger Remote Signer API
  version: "1.0"
paths:
  /gpg/decrypt:
    post:
      consumes:
      - application/json
      operationId: gpg-data-decrypt
      parameters:
      - description: Information to decrypt
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGDecryptData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GPGDecryptedData'
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Decrypts data using loaded GPG Private Key
      tags:
      - GPG Operations
  /gpg/encrypt:
    post:
      consumes:
      - application/json
      operationId: gpg-data-encrypt
      parameters:
      - description: Information to encrypt to public key
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGEncryptData'
      produces:
      - application/json
      responses:
        "200":
          description: wcDMA8HPMfuMKotZAQwADzmQgwJiz3p5suaYpPwCbOluqvu2O5kVitJNO86KfkSYgbR0y67c+fGk5nO+Zm66qeolXLqVBHUvSnpZf9jMupRZLRmSZ0JmmvXoJIdiahj+NLwF6NVBvmoJ8BkMEQkr5oCNkKBveaCYXdQ7Gba2buICwxxwEmq3LV6/D0Zg4AmKX/k2N1kjRGJaUeHH3oU1YEjPo3A3bo9EZLGLI+J5VSlxkydxXUkF2TISKCr2rkhUmH5E7CUFu6H2nOofxk9tJDoSfjACkEjFKdg3BbTqNlYeuNmdJHwLfHDI+WcbL3/Hsl5MVnyHGeztsj0jn2bAIcT9FHfw1W3LUpaTNlemfrn52la7zN3r2588JDRbSaqLQ/d5+3hHWyE7RsRL0jdpEj/HM3ue2mi6GfyxDZy1DxdZsy7kqoYbBIwbtCdqZetU+bH6hWk92BY89AJUpV7xPCzRozw5WvCTsPYsu10JDvvPvj1c47BA9KlJ1wTcB2lYhmoX39T3ymjMKJ+6NAOF0uAB5PToGBs3BjE4MsxQHMLchK3hTuXg+uAY4fVU4I3jFyDPs8zYKsfgCOIHYBV84Obhm9rgqOAh4Ifi+klQeOCf4+p0IGeF6b6+4IPiAtTxRuB+5KnAAWAlBpwJWAqwNJ68HIjiN9UOgeGU+wA=
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Encrypts data for a GPG Key
      tags:
      - GPG Operations
  /gpg/generateKey:
    post:
      consumes:
      - application/json
      description: Generates a new GPG Key by specifying the Identifier, Bits and
        Password
      operationId: gpg-key-generate
      parameters:
      - description: Information to generate the key. The minimum acceptable bits
          is 2048.
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGGenerateKeyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Generates a new GPG Key
      tags:
      - GPG Operations
  /gpg/sign:
    post:
      consumes:
      - application/json
      description: Signs a payload using the specified GPG key and returns the signature
        in GPG Format
      operationId: gpg-data-sign
      parameters:
      - description: Data to sign
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGSignData'
      produces:
      - text/plain
      responses:
        "200":
          description: '-----BEGIN PGP SIGNATURE-----\n\nwsDcBAABCgAQBQJf+LriCRAFUfRSq+RjpAAAuL0MAGGrSJfK/tnMkwZ2Rkh3JcvF\nE8WU8jwc8quz+0p9gMDscby0jShJ2G2XXMm3WAYXW88J6h8u2E/lTb6l3oBq/FPb\n15gTM5Ie0p0kHBUlgP5bkV9EF9+VQif40fhVX7OPrS27jWtVNP374ARzSIgKMLa6\nKBZhV1eQecLIlEYXahUP9jyt4cR4A4d9P+YJS/L6d/tQT4g9DBo66hYt5lu4sagG\nDHsW2HK9I7fizCBaE8azLtQd3RRFTWZshln7OGVypwcdbzWbYr5uEhituxAnZKS4\nSWwI0hgj1OkZeOhKwaydtITnaeH+nmlLBzhGKQWjCiLlsDNkkp3/4FKOuYJkYXeZ\nm61GV6G5ZpW/gFVJXXyPz6ElNfWCorZQvxLbY4YWTBLdLyblHnp9kshav6dnexN1\nwQyBDk8jxucmKNE8kCu591dPj/g/H38/zpGZQhj8Firb0rCFumqsAwxFeyTEFjVI\ncyDHa5K+ytmSrITIdQUUsp1M4UQiRH63c1HYOLQurw==\n=BRZt\n-----END
            PGP SIGNATURE-----'
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Signs a payload in GPG Format
      tags:
      - GPG Operations
  /gpg/signQuanto:
    post:
      consumes:
      - application/json
      description: Signs a payload using the specified GPG key and returns the signature
        in Quanto Format
      operationId: gpg-data-sign-quanto
      parameters:
      - description: Data to sign
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGSignData'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Signs a payload in Quanto Format
      tags:
      - GPG Operations
  /gpg/unlockKey:
    post:
      consumes:
      - application/json
      description: Unlocks a locked pre-loaded key inside remote signer
      operationId: gpg-key-unlock
      parameters:
      - description: Unlock Data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGUnlockKeyData'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Unlocks a pre-loaded key
      tags:
      - GPG Operations
  /gpg/verifySignature:
    post:
      consumes:
      - application/json
      operationId: gpg-data-verify
      parameters:
      - description: Information to verify a signature in GPG format
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGVerifySignatureDataNonQuanto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Verifies a signature in GPG Format
      tags:
      - GPG Operations
  /gpg/verifySignatureQuanto:
    post:
      consumes:
      - application/json
      operationId: gpg-data-verify-quanto
      parameters:
      - description: Information to verify a signature in quanto format
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGVerifySignatureData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Verifies a signature in Quanto Format
      tags:
      - GPG Operations
  /pks/add:
    post:
      consumes:
      - text/plain
      operationId: hkp-add
      parameters:
      - description: GPG Public Key
        in: body
        name: publickey
        required: true
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: GPG SKS Keyserver Lookup
      tags:
      - SKS
  /pks/lookup:
    get:
      consumes:
      - text/plain
      operationId: hkp-lookup
      parameters:
      - description: 'HKP Operation. Valid values: get, index, vindex'
        in: query
        name: op
        required: true
        type: string
      - description: 'HKP Operation options. Valid values: mr, nm'
        in: query
        name: options
        required: true
        type: string
      - description: HKP Search Value
        in: query
        name: search
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: result of the query
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: GPG SKS Keyserver Lookup
      tags:
      - SKS
swagger: "2.0"
tags:
- description: Operations using GPG Keys like Encrypt, Decrypt, Sign, Verify
  name: GPG Operations
- description: Operations for encrypting / decrypting JSON Data
  name: Field Cipher
- description: Operations for key load and store
  name: Key Store
- description: Operations for a REST optimized Public Key Server
  name: Public Key Server
- description: Operations for Standard PGP Public Key Server
  externalDocs:
    url: https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00
  name: SKS
